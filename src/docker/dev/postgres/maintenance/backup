!#/usr/bin/env bash 


set -o errexit 
set -o nounset
set -o pipefail 

# get the currect file address
work_dir="$(dirname ${0})"

# import necessary files 
source "${work_dir}/_sourced/constants.sh"
source "${work_dir}/_sourced/messages.sh"


message_welcome "Backing up the '{POSTGRES_DB}' database ... "

# default postgres user is not allowed to backup
if [[ "${POSTGRES_USER}" == "postgres" ]]; then 
    message_error "Backing up as default 'postgres' user is not allowed. Assign 'POSTGRES_USER' in env file with custom user."
    exit 1 
fi 


: '
export POSTGRES_HOST="${POSTGRES_HOST}"
export POSTGRES_PORT="${POSTGRES_PORT}"
export POSTGRES_USER="${POSTGRES_USER}"
export POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
export POSTGRES_DB="${POSTGRES_DB}"
'

# exporinting the postgres credentials 
export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"


backup_filename="${BACKUP_FILE_PREFIX}_$(date + '%Y_%m_%dT%H_%M_%S').sql.gz"

# pg_dump bash command and compress the backup with gzip 
pg_dump | gzip > "${BACKUP_DIR_PATH}/${backup_filename}"


message_success "'${POSTGRES_DB}' database backup '${backup_filename}' has been created successfull and stored in '${BACKUP_DIR_PATH}'"


